/*
 * generated by Xtext 2.22.0
 */
package org.ccsl.scoping;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import ccsl.elements.Element;
import ccsl.ccslPackage;



/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class TextualScopeProvider extends AbstractTextualScopeProvider {
	
	@Override
	public IScope getScope(EObject context, EReference reference) {
		if (context instanceof Element && reference == ccslPackage.Literals.ATOMIC_RULE__SUBJECT) {
			EObject rootElement = EcoreUtil2.getRootContainer(context);
			List<Element> candidates = EcoreUtil2.getAllContentsOfType(rootElement, Element.class);
			return Scopes.scopeFor(candidates);
    }
    return super.getScope(context, reference);
}
}
